# Generated by Django 3.2.6 on 2022-02-14 06:24

from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('external_id', models.CharField(blank=True, default=None, max_length=32, null=True)),
                ('code', models.CharField(blank=True, db_index=True, default=None, max_length=32, null=True)),
                ('code2', models.CharField(blank=True, db_index=True, default=None, max_length=32, null=True)),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(blank=True, db_index=True, max_length=255, null=True, verbose_name='Email address')),
                ('first_name', models.CharField(blank=True, db_index=True, max_length=120)),
                ('last_name', models.CharField(blank=True, db_index=True, max_length=120)),
                ('image', models.ImageField(blank=True, null=True, upload_to='account/%Y/%m/')),
                ('type', models.IntegerField(choices=[(0, 'user'), (1, 'system_user')], default=0)),
                ('language', models.CharField(blank=True, default='en', max_length=12)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_force_reset_password', models.BooleanField(default=False)),
                ('phone', models.CharField(blank=True, db_index=True, max_length=64, null=True)),
                ('is_verified_email', models.BooleanField(default=False)),
                ('extra', models.TextField(default='{}')),
                ('facebook_user_id', models.CharField(blank=True, max_length=255)),
                ('google_user_id', models.CharField(blank=True, max_length=255)),
                ('apple_user_id', models.CharField(blank=True, max_length=255)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('is_accepted_active_consent', models.BooleanField(db_index=True, default=False)),
                ('datetime_update', models.DateTimeField(auto_now=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Token',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(blank=True, max_length=100, unique=True)),
                ('datetime_create', models.DateField(auto_now_add=True, db_index=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-datetime_create'],
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(db_index=True, max_length=255)),
                ('token', models.TextField(blank=True, null=True)),
                ('datetime_create', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PasswordHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('datetime_create', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Forgot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(db_index=True, max_length=120)),
                ('status', models.IntegerField(choices=[(-1, 'Deactivate'), (1, 'Activate'), (2, 'Completed'), (3, 'Expired')], db_index=True, default=1)),
                ('method', models.IntegerField(choices=[(0, '(Not set)'), (1, 'Forgot password'), (2, 'Force reset password'), (3, 'Change password'), (4, 'Forgot password OTP')], db_index=True, default=0)),
                ('datetime_create', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('send_method', models.IntegerField(choices=[(1, 'Email'), (2, 'SMS')], db_index=True, default=1)),
                ('count_failed', models.IntegerField(default=0)),
                ('datetime_failed_limit', models.DateTimeField(blank=True, null=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'default_permissions': (),
            },
        ),
    ]
